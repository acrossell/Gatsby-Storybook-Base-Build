//Background grid and styling
//---------------------------


//Square Parent
//--------------
.squareParent{
  display: grid;
  grid-template-areas: 
    'item1 item2'
    'item3 item4';

    .item1 { 
      grid-area: item1; 
      background-color: hsl(0, 0%, 100%);
    }
    
    .item2 { 
      background-color: hsl(0, 0%, 100%);
      grid-area: item2; 
    
    }
    
    .item3 { 
      background-color: hsl(0, 0%, 100%);
      grid-area: item3; 
    }
    
    .item4 { 
      background-color: hsl(0, 0%, 100%);
      grid-area: item4; 
    }
}

//Square Parent Modifiers
//-----------------------
.squareParent--item1{
  grid-area: item1;

  .item1 { 
    grid-area: item1; 
    background-color: hsl(215, 100, 28%);
  }
  
  .item2 { 
    background-color: hsl(214, 40, 90%);
    grid-area: item2; 
  
  }
  
  .item3 { 
    background-color: hsl(215, 39, 57);
    grid-area: item3; 
  }
  
  .item4 { 
    background-color: hsl(215, 39, 57);
    grid-area: item4; 
  }
}

.squareParent--item2{
  grid-area: item2;
}

.squareParent--item3{
  grid-area: item3;
}

.squareParent--item4{
  grid-area: item4;

  .item1 { 
    background-color: hsl(215, 100, 28%);
  }

  .item2 { 
    background-color: hsl(214, 40, 90%);
  }

  .item3 { 
    background-color: hsl(215, 39, 57);
  }

  .item4 { 
    background-color: hsl(214, 40, 90%);
  }
}

.squareParent--item5{
  grid-area: item5;
  box-shadow: hsla(215, 100, 28%, 30%) 0 0 3.2rem;
  transform: translateX(2rem) translateY(-2rem);

  .item1 { 
    background-color: hsl(215, 100, 28%);
  }

  .item2 { 
    background-color: hsl(215, 100, 28%);
  }

  .item3 { 
    background-color: hsl(215, 100, 28%);
  }

  .item4 { 
    background-color: hsl(215, 100, 28%);
  }
}

.squareParent--item6{
  grid-area: item6; 

  .item1 { 
    background-color: hsl(215, 39, 57);
  }

  .item2 { 
    background-color: hsl(215, 39, 57);
  }

  .item3 { 
    background-color: hsl(214, 40, 90%);
  }

  .item4 { 
    background-color: hsl(215, 100, 28%);
  }
}

.squareParent--item7{
  grid-area: item7; 

  .item1 { 
    background-color: hsl(215, 100, 28%);
  }
  
  .item2 { 
    background-color: hsl(215, 100, 28%);
  }
  
  .item3 { 
    background-color: hsl(215, 100, 28%);
  }
  
  .item4 { 
    background-color: hsl(215, 100, 28%);
  }
}

.squareParent--item8{
  grid-area: item8; 

  .item1 { 
    background-color: hsl(215, 39, 57);
  }
  
  .item2 { 
    background-color: hsl(215, 39, 57);
  }
  
  .item3 { 
    background-color: hsl(214, 40, 90%);
  }
  
  .item4 { 
    background-color: hsl(215, 100, 28%);
  }
}

.squareParent--item9{
  grid-area: item9; 

  .item1 { 
    background-color: hsl(215, 100, 28%);
  }
  
  .item2 { 
    background-color: hsl(214, 40, 90%);
  }
  
  .item3 { 
    background-color: hsl(214, 40, 90%);
  }
  
  .item4 { 
    background-color: hsl(215, 100, 28%);
  }
}

//Image Modifier
//--------------
.squareParent--image{
  position: relative;
  overflow: hidden;

  &:after{
    position: absolute;
    height: 100%;
    width: 100%;
    transform: rotate(225deg) scale(1.5);
    content: "";
    background-image: url('../../../images/alexRossellMugshot.jpg');
    background-size: cover;
    background-position: center;

    @media only screen and (min-width: 768px) {
    
    }
  
    @media only screen and (min-width: 1024px) {
      transform: rotate(-45deg) scale(1.5);
    }
  
    @media only screen and (min-width: 1280px) {
  
    }
  
    @media only screen and (min-width: 1440px) {
    }
  }
}

//Square Child
//------------
.squareParent__squareChild{
  &:before {
    content: '';
    display: block;
    padding-top: 100%;
  }
}

//Background Grid
//----------------
.backgroundGrid{
  display: grid;
  grid-template-areas: 
    'item1 item2 item3'
    'item4 item5 item6'
    'item7 item8 item9';
  max-width: 100vh;
  overflow: hidden;
  pointer-events: none;
}


//Background positioning
//---------------------
.hasBackground{
  overflow-x: hidden;
  
  .backgroundGrid{
    backface-visibility: hidden;
    left: calc(50% - 30rem);
    min-width: 60rem;
    position: absolute;
    top: -18rem;
    transform: rotate(135deg);
    z-index: 1;
  }

  @media only screen and (min-width: 48em) {
    .backgroundGrid{
      left: calc(50% - 65rem);
      top: -39rem;
      min-width: 130rem;
      z-index: -1;
    }
  }

  @media only screen and (min-width: 64em) {
    height: 100vh;
    overflow: hidden;

    .backgroundGrid{
      left: -45rem;
      top: calc(50% - 65rem);
      transform: rotate(45deg);
      min-width: 130rem;
      position: fixed;
    }
  }

  @media only screen and (min-width: 90em) {
    .backgroundGrid{
      left: -25rem;
      transform: rotate(45deg);
    }
  }
}